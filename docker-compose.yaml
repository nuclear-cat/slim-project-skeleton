version: '3.9'

x-mode-variables: &mode-variables
   APP_ENV: dev
   APP_DEBUG: 1
   PHP_IDE_CONFIG: 'serverName=user-manager.test'

x-db-variables: &db-variables
   DB_HOST: ${COMPOSE_PROJECT_NAME}-postgresql
   DB_USER: user
   DB_PASSWORD: password
   DB_NAME: db

services:
   nginx:
      container_name: ${COMPOSE_PROJECT_NAME}-nginx
      build:
         context: ./docker/dev
         dockerfile: nginx/Dockerfile
      volumes:
         - ./:/app
      depends_on:
         php-fpm:
            condition: service_started
      ports:
         - '9301:81'
      networks:
         - main-network

   php-fpm:
      container_name: ${COMPOSE_PROJECT_NAME}-php-fpm
      build:
         context: ./docker/dev
         dockerfile: php-fpm/Dockerfile
      depends_on:
         postgresql:
            condition: service_healthy
      volumes:
         - ./:/app
         - ./docker/dev/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      working_dir: /app
      networks:
         - main-network
      environment:
         <<: *db-variables
         <<: *mode-variables

   php-cli:
      container_name: ${COMPOSE_PROJECT_NAME}-php-cli
      build:
         context: ./docker/dev/
         dockerfile: php-cli/Dockerfile
      depends_on:
         postgresql:
            condition: service_healthy
      volumes:
         - ./:/app
      working_dir: /app/backend
      networks:
         - main-network
      environment:
         <<: *db-variables
         <<: *mode-variables

   postgresql:
      container_name: ${COMPOSE_PROJECT_NAME}-postgresql
      image: postgres:15.2-alpine
      environment:
         POSTGRES_USER: user
         POSTGRES_PASSWORD: password
         POSTGRES_DB: db
      ports:
         - '9202:5432'
      networks:
         - main-network
      healthcheck:
         test: ['CMD-SHELL', 'pg_isready', '-d', 'db']
         interval: 5s
         timeout: 5s
         retries: 5

networks:
   main-network:
      name: ${COMPOSE_PROJECT_NAME}-network
      driver: bridge
